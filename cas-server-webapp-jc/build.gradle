apply plugin: 'war'
apply plugin: "org.akhikhl.gretty"
apply plugin: 'com.bmuschko.cargo'

description = 'Apereo CAS Web Application JC'

javadoc {
    enabled false
}

war {
    manifest {
        attributes("Implementation-Title": project.name,
                "Implementation-Vendor": project.group,
                "Created-By": project.group,
                "Implementation-Date": new Date(),
                "Implementation-Version": project.version)
    }
}

buildscript {
    repositories {
        maven {
            url 'https://repository.jboss.org/nexus/content/groups/public'
        }
        jcenter();
    }

    dependencies {
        classpath 'com.bmuschko:gradle-cargo-plugin:2.2.1'
    }
}

dependencies {
    compile project(':cas-server-webapp-support')
    compile project(':cas-server-core')
    compile project(':cas-server-core-monitor')
    compile project(':cas-server-core-authentication')
    compile project(':cas-server-core-services')
    compile project(':cas-server-core-logout')
    compile project(':cas-server-core-audit')
    compile project(':cas-server-core-logging')
    compile project(':cas-server-core-tickets')
    compile project(':cas-server-core-web')
    compile project(':cas-server-core-validation')
    compile project(':cas-server-core-util')
    compile project(':cas-server-webapp-throttle')
    compile project(':cas-server-webapp-actions')
    compile project(':cas-server-webapp-cookie')
    compile project(':cas-server-webapp-reports')
    compile project(':cas-server-webapp-themes')
    compile project(':cas-server-webapp-validation')

	compile(group: 'org.projectlombok', name: 'lombok', version: '1.16.6')
	
	compile(group: 'org.springframework.data', name: 'spring-data-jpa', version: springDataVersion) {
		exclude(module: 'spring-orm')
		exclude(module: 'spring-context')
		exclude(module: 'spring-tx')
		exclude(module: 'spring-beans')
		exclude(module: 'spring-core')
		exclude(module: 'aspectjrt')
		exclude(module: 'slf4j-api')
		exclude(module: 'jcl-over-slf4j')
		exclude(module: 'spring-aop')
	}
	
    compile(group: 'org.springframework.security', name: 'spring-security-config', version: springSecVersion) {
        exclude(module: 'commons-logging')
        exclude(module: 'spring-core')
        exclude(module: 'spring-beans')
        exclude(module: 'spring-context')
        exclude(module: 'spring-aop')
        exclude(module: 'spring-expression')
        exclude(module: 'spring-web')
    }
    compile(group: 'org.springframework.security', name: 'spring-security-web', version: springSecVersion) {
        exclude(module: 'spring-core')
        exclude(module: 'spring-beans')
        exclude(module: 'spring-context')
        exclude(module: 'spring-aop')
        exclude(module: 'spring-expression')
        exclude(module: 'spring-web')
    }
    compile group: 'com.lmax', name: 'disruptor', version: disruptorVersion
    runtime group: 'org.springframework', name: 'spring-expression', version: springVersion
    runtime group: 'javax.servlet', name: 'jstl', version: javaxJstlVersion
    runtime group: 'taglibs', name: 'standard', version: taglibsVersion
    runtime group: 'org.jasig.cas', name: 'cas-server-security-filter', version: casSecurityFilterVersion
    runtime(group: 'com.ryantenney.metrics', name: 'metrics-spring', version: dropwizardMetricsVersion) {
        exclude(module: 'slf4j-api')
        exclude(module: 'spring-core')
        exclude(module: 'spring-beans')
        exclude(module: 'spring-context-support')
        exclude(module: 'spring-aop')
    }
    runtime(group: 'io.dropwizard.metrics', name: 'metrics-jvm', version: dropwizardMetricsVersion) {
        exclude(module: 'slf4j-api')
    }
    runtime(group: 'io.dropwizard.metrics', name: 'metrics-servlets', version: dropwizardMetricsVersion) {
        exclude(module: 'slf4j-api')
        exclude(module: 'jackson-databind')
    }
    runtime group: 'org.apache.logging.log4j', name: 'log4j-web', version: log4jVersion
    runtime(group: 'org.jasig', name: 'spring-webflow-client-repo', version: springWebflowClientVersion) {
        exclude(module: 'log4j')
        exclude(module: 'slf4j-api')
        exclude(module: 'slf4j-log4j12')
        exclude(module: 'spring-webflow')
        exclude(module: 'commons-codec')
        exclude(module: 'spring-core')
        exclude(module: 'spring-beans')
        exclude(module: 'bcprov-jdk15on')
    }
    runtime group: 'com.mchange', name: 'c3p0', version: c3p0Version
    runtime group: 'org.bouncycastle', name: 'bcprov-jdk15on', version:bouncyCastleVersion

    cargo 'org.wildfly:wildfly-controller-client:8.2.1.Final'
    cargo 'org.codehaus.cargo:cargo-ant:1.4.16'
}

configurations {
    grettyRunnerJetty9 {
        resolutionStrategy.eachDependency { DependencyResolveDetails details ->
            if (details.requested.group == 'org.ow2.asm') {
                details.useVersion('5.0.3')
            }
            if (details.requested.group == 'org.glassfish'
                    && details.requested.name == 'javax.el') {
                details.useVersion(javaxElVersion)
            }
        }
    }
}

gretty {
    jvmArgs = ["-Dorg.eclipse.jetty.annotations.maxWait=120","-Xdebug","-Xrunjdwp:transport=dt_socket,address=5000,server=y,suspend=n"]
    scanInterval = 5
    contextPath = '/cas'
    httpsEnabled = true
    httpsPort = 8443
    sslKeyStorePath = '/etc/cas/jetty/thekeystore'
    sslKeyStorePassword = 'changeit'
    sslTrustStorePath = '/etc/cas/jetty/thekeystore'
    sslKeyStorePassword = 'changeit'
}


cargo {
    containerId = 'wildfly8x'
    remote {
        containerProperties {
            property 'cargo.jboss.management-http.port', 9990
        }
        hostname = 'cas.myfarm.com'
        protocol = 'http'
        username = 'admin'
        password = 'Delphi96~'
    }
}
